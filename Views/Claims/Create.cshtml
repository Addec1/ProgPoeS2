@model CMCS.Prototype.Models.ClaimVm
@using CMCS.Prototype.Models

@{
    ViewData["Title"] = "Create Claim";
}

<h1 class="h4 mb-3">Create Monthly Claim</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        Please fix the errors below.
    </div>
}

<form asp-action="Create" method="post" enctype="multipart/form-data" class="card shadow-sm">
    @Html.AntiForgeryToken()
    <div class="card-body">

        <div class="row g-3">
            <div class="col-md-6">
                <label asp-for="LecturerName" class="form-label">Lecturer Name</label>
                <input asp-for="LecturerName" class="form-control" />
                <span asp-validation-for="LecturerName" class="text-danger"></span>
            </div>

            <div class="col-6 col-md-3">
                <label asp-for="Month" class="form-label">Month</label>
                <input asp-for="Month" type="number" min="1" max="12" class="form-control" />
                <span asp-validation-for="Month" class="text-danger"></span>
            </div>

            <div class="col-6 col-md-3">
                <label asp-for="Year" class="form-label">Year</label>
                <input asp-for="Year" type="number" min="2000" max="2100" class="form-control" />
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>

            <div class="col-6 col-md-3">
                <label asp-for="HourlyRate" class="form-label">Hourly Rate (R)</label>
                <input asp-for="HourlyRate" type="number" step="0.01" class="form-control" />
                <span asp-validation-for="HourlyRate" class="text-danger"></span>
            </div>
        </div>

        <hr />

        <h2 class="h6">Entries</h2>
        <div class="table-responsive">
            <table class="table table-sm align-middle" id="entriesTable">
                <thead class="table-light">
                    <tr>
                        <th style="width: 180px;">Date</th>
                        <th style="width: 160px;" class="text-end">Hours</th>
                        <th>Description</th>
                        <th style="width: 1px;"></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < (Model.Entries?.Count ?? 0); i++)
                    {
                        <tr>
                            <td>
                                <input asp-for="Entries[i].Date" type="date" class="form-control" />
                            </td>
                            <td>
                                <input asp-for="Entries[i].Hours" type="number" step="0.25" min="0" class="form-control text-end" />
                            </td>
                            <td>
                                <input asp-for="Entries[i].Description" class="form-control" placeholder="e.g., Lectures / Marking / Consultations" />
                            </td>
                            <td class="text-end">
                                <button type="button" class="btn btn-sm btn-outline-danger remove-row">&times;</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-sm btn-outline-primary" id="addRow">Add entry</button>

        <hr />

        <div class="mb-3">
            <label class="form-label">Supporting documents (PDF, DOCX, XLSX; max 10MB each)</label>
            <input type="file" name="files" class="form-control" multiple />
        </div>

        <div class="mb-3">
            <label asp-for="Notes" class="form-label">Notes (optional)</label>
            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Any comments to coordinator/manager"></textarea>
        </div>
    </div>

    <div class="card-footer d-flex justify-content-end gap-2">
        <a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
        <button type="submit" class="btn btn-primary">Submit Claim</button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
            const table = document.getElementById('entriesTable').querySelector('tbody');
            const addBtn = document.getElementById('addRow');

            addBtn.addEventListener('click', function () {
                const idx = table.querySelectorAll('tr').length;
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td><input name="Entries[${idx}].Date" type="date" class="form-control" /></td>
                    <td><input name="Entries[${idx}].Hours" type="number" step="0.25" min="0" class="form-control text-end" /></td>
                    <td><input name="Entries[${idx}].Description" class="form-control" placeholder="e.g., Lectures / Marking / Consultations" /></td>
                    <td class="text-end"><button type="button" class="btn btn-sm btn-outline-danger remove-row">&times;</button></td>
                `;
                table.appendChild(tr);
            });

            table.addEventListener('click', function (e) {
                if (e.target.closest('.remove-row')) {
                    e.target.closest('tr').remove();
                    // No reindexing required for MVC to bind sequentially added rows,
                    // but if you want strict indexing after deletes, you could reindex here.
                }
            });
        })();
    </script>
}